{"title":"简单排序之冒泡排序、选择排序、插入排序（Java实现）","slug":"简单排序之冒泡排序、选择排序、插入排序","date":"2018-06-01T12:28:23.000Z","updated":"2018-06-06T13:02:02.975Z","comments":true,"excerpt":"","content":"<p>今天写了一下数据结构里三种比较基础简单的排序算法。</p>\n<h1 id=\"1-冒泡排序\"><a href=\"#1-冒泡排序\" class=\"headerlink\" title=\"1.冒泡排序\"></a>1.冒泡排序</h1><p>升序的话就是，两两依次比较，然后把大的数往后沉下去，第一次排序结束，最后一个最大的数优先排好，然后进行第二次比较，如果数组长度为n，那么一共要进行n次比较，每一次进行n-i-1趟比较。</p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">bubbleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrays)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n=arrays.length;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n-i-<span class=\"number\">1</span>;j++) &#123;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(arrays[j]&gt;arrays[j+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">\t\t\t\t\ttemp=arrays[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\t\tarrays[j+<span class=\"number\">1</span>]=arrays[j];</span><br><span class=\"line\">\t\t\t\t\tarrays[j]=temp;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//依次打印排序后得到的结果</span></span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"冒泡排序结果如下：\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arrays[i]+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>时间复杂度:O(n²)<br>空间复杂度:O(1)</p>\n</blockquote>\n<h1 id=\"2-选择排序\"><a href=\"#2-选择排序\" class=\"headerlink\" title=\"2.选择排序\"></a>2.选择排序</h1><p>同样也是升序，就是从数组下标0开始，依次比较，第一次比较出最小的数，和arrays[0]交换位置，然后依次类推，找出剩余最小的数，交换位置，如果数组长度为n，那么一共要进行n次比较，每一次比较n-i趟。</p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">selectSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrays)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n=arrays.length;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n-i;j++) &#123;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(arrays[i]&gt;arrays[i+j]) &#123;</span><br><span class=\"line\">\t\t\t\t\t</span><br><span class=\"line\">\t\t\t\t\ttemp=arrays[i];</span><br><span class=\"line\">\t\t\t\t\tarrays[i]=arrays[i+j];</span><br><span class=\"line\">\t\t\t\t\tarrays[i+j]=temp;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//依次打印排序后得到的结果</span></span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"选择排序结果如下：\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arrays[i]+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>时间复杂度:O(n²)<br>空间复杂度:O(1)</p>\n</blockquote>\n<h1 id=\"3-插入排序\"><a href=\"#3-插入排序\" class=\"headerlink\" title=\"3.插入排序\"></a>3.插入排序</h1><p>升序，假定一个数组从arrays[0]开始，然后往里面依次插入数，保证每次插入的数顺序都已经排好。每当要插入arrays[j]时，从已排好序的数组的下标最后一位开始扫描，如果arrays[j]之前还有比它大的数就交换位置。如果数组长度为n，一共要比较n次，一共比较0+1+2+…+n-1次。</p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrays)</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n=arrays.length;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&gt;<span class=\"number\">0</span>;j--) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(arrays[j-<span class=\"number\">1</span>]&gt;arrays[j]) &#123;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\ttemp=arrays[j-<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tarrays[j-<span class=\"number\">1</span>]=arrays[j];</span><br><span class=\"line\">\t\t\t\tarrays[j]=temp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//依次打印排序后得到的结果</span></span><br><span class=\"line\">\tSystem.out.print(<span class=\"string\">\"插入排序结果如下：\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) &#123;</span><br><span class=\"line\">\t\tSystem.out.print(arrays[i]+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSystem.out.print(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>时间复杂度:O(n²)<br>空间复杂度:O(1)</p>\n</blockquote>\n","categories":[{"name":"数据结构","path":"api/categories/数据结构.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"},{"name":"数据结构","path":"api/tags/数据结构.json"},{"name":"冒泡排序","path":"api/tags/冒泡排序.json"},{"name":"选择排序","path":"api/tags/选择排序.json"},{"name":"插入排序","path":"api/tags/插入排序.json"}]}